<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\mr_j2s_a.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\mr_j2s_a.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Tue Aug 15 11:38:22 2023
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; servo_send_write_command &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC0_1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC0_1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[39]">ADC2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from gd32e50x_it.o(.text.BusFault_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[20]">CAN0_EWMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1f]">CAN0_RX1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[49]">CAN1_EWMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[47]">CAN1_RX0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[48]">CAN1_RX1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[46]">CAN1_TX_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[15]">DMA0_Channel0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[16]">DMA0_Channel1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[17]">DMA0_Channel2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[18]">DMA0_Channel3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[19]">DMA0_Channel4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel5_IRQHandler</a> from gd32e50x_it.o(.text.DMA0_Channel5_IRQHandler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel6_IRQHandler</a> from gd32e50x_it.o(.text.DMA0_Channel6_IRQHandler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[42]">DMA1_Channel0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[43]">DMA1_Channel1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[44]">DMA1_Channel2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[45]">DMA1_Channel3_4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gd32e50x_it.o(.text.DebugMon_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3a]">EXMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[32]">EXTI10_15_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[21]">EXTI5_9_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[e]">FMC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32e50x_it.o(.text.HardFault_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2a]">I2C0_ER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[29]">I2C0_EV_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[52]">I2C2_ER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[51]">I2C2_EV_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[54]">I2C2_WKUP_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gd32e50x_it.o(.text.MemManage_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32e50x_it.o(.text.NMI_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gd32e50x_it.o(.text.PendSV_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[f]">RCU_CTC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4f]">SHRTIMER_IRQ0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[50]">SHRTIMER_IRQ1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4a]">SHRTIMER_IRQ2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4b]">SHRTIMER_IRQ3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4c]">SHRTIMER_IRQ4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4d]">SHRTIMER_IRQ5_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[4e]">SHRTIMER_IRQ6_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2d]">SPI0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2e]">SPI1_I2S1ADD_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3d]">SPI2_I2S2ADD_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gd32e50x_it.o(.text.SVC_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gd32e50x_it.o(.text.SysTick_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[56]">SystemInit</a> from system_gd32e50x.o(.text.SystemInit) referenced from startup_gd32e50x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[22]">TIMER0_BRK_TIMER8_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[25]">TIMER0_Channel_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[24]">TIMER0_TRG_CMT_TIMER10_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[23]">TIMER0_UP_TIMER9_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[26]">TIMER1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[27]">TIMER2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[28]">TIMER3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3c]">TIMER4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[40]">TIMER5_DAC_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[41]">TIMER6_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[35]">TIMER7_BRK_TIMER11_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[38]">TIMER7_Channel_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[37]">TIMER7_TRG_CMT_TIMER13_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[36]">TIMER7_UP_TIMER12_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3e]">UART3_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[2f]">USART0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[53]">USART5_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[55]">USART5_WKUP_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1d]">USBD_HP_CAN0_TX_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[1e]">USBD_LP_CAN0_RX0_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[34]">USBD_WKUP_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gd32e50x_it.o(.text.UsageFault_Handler) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32e50x_hd.o(.text) referenced from startup_gd32e50x_hd.o(RESET)
 <LI><a href="#[57]">__main</a> from __main.o(!!!main) referenced from startup_gd32e50x_hd.o(.text)
 <LI><a href="#[59]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[58]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[57]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ad]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[ae]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5d]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[af]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[79]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[5e]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[60]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[62]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[b0]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[69]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[64]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[b1]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[6e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c5]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[c6]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[5b]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[cc]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[66]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[68]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[cd]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[6a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; servo_send_write_command &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ce]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[7d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[6d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[cf]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[6f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN1_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C2_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SHRTIMER_IRQ0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SHRTIMER_IRQ1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SHRTIMER_IRQ2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SHRTIMER_IRQ3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SHRTIMER_IRQ4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SHRTIMER_IRQ5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>SHRTIMER_IRQ6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_I2S1ADD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_I2S2ADD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER0_BRK_TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER0_TRG_CMT_TIMER10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER0_UP_TIMER9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIMER7_BRK_TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER7_TRG_CMT_TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIMER7_UP_TIMER12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USART5_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USBD_HP_CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USBD_LP_CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBD_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_gd32e50x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[71]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_write_command
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_read_command
</UL>

<P><STRONG><a name="[74]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[75]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[73]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[5f]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[d0]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__printf</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[d1]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[72]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[58]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[61]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[63]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[67]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[6c]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d4]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d5]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[d6]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, gd32e50x_it.o(.text.DMA0_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA0_Channel5_IRQHandler &rArr; dma_transfer_number_config
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_handle_error
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gd32e50x_it.o(.text.DMA0_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA0_Channel6_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SystemInit</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, system_gd32e50x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e50x_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e50x_hd.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>dma_channel_disable</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_send
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxdata
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>dma_channel_enable</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_send
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxdata
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>dma_circulation_disable</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_circulation_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_circulation_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_txinit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
</UL>

<P><STRONG><a name="[8d]"></a>dma_deinit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_txinit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
</UL>

<P><STRONG><a name="[81]"></a>dma_flag_clear</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_flag_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxdata
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>dma_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_txinit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
</UL>

<P><STRONG><a name="[8f]"></a>dma_interrupt_enable</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_txinit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
</UL>

<P><STRONG><a name="[84]"></a>dma_interrupt_flag_clear</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_interrupt_flag_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[7e]"></a>dma_interrupt_flag_get</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>dma_memory_address_config</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_memory_address_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_memory_address_config
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_send
</UL>

<P><STRONG><a name="[91]"></a>dma_memory_to_memory_disable</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_memory_to_memory_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_memory_to_memory_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_txinit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
</UL>

<P><STRONG><a name="[92]"></a>dma_nvic_config</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usart1_dma0.o(.text.dma_nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dma_nvic_config &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_init
</UL>

<P><STRONG><a name="[82]"></a>dma_transfer_number_config</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gd32e50x_dma.o(.text.dma_transfer_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_transfer_number_config
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_periph_and_channel_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_send
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxdata
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>get_servo_data_length</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mr_j2s_a_servo.o(.text.get_servo_data_length))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_write_command
</UL>

<P><STRONG><a name="[7f]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e50x_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e50x_gpio.o(.text.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_handle_error
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
</UL>

<P><STRONG><a name="[96]"></a>gpio_init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, gd32e50x_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>gpio_input_bit_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e50x_gpio.o(.text.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>main</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = main &rArr; servo_send_write_command &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_write_command
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_read_command
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[93]"></a>nvic_irq_enable</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, gd32e50x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_nvic_config
</UL>

<P><STRONG><a name="[9b]"></a>nvic_priority_group_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e50x_misc.o(.text.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[8a]"></a>nvic_vector_table_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32e50x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[aa]"></a>rcu_clock_freq_get</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, gd32e50x_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[95]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e50x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_txinit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32e50x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[ab]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e50x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[85]"></a>servo_handle_error</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mr_j2s_a_servo.o(.text.servo_handle_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = servo_handle_error
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[97]"></a>servo_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, mr_j2s_a_servo.o(.text.servo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = servo_init &rArr; usart1_dma0_txinit &rArr; dma_memory_to_memory_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_txinit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_nvic_config
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>servo_send_read_command</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, mr_j2s_a_servo.o(.text.servo_send_read_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = servo_send_read_command &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_send
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxdata
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>servo_send_write_command</STRONG> (Thumb, 196 bytes, Stack size 64 bytes, mr_j2s_a_servo.o(.text.servo_send_write_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = servo_send_write_command &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_send
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxdata
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_servo_data_length
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>systick_config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, systick.o(.text.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = systick_config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>usart1_dma0_rxdata</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usart1_dma0.o(.text.usart1_dma0_rxdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usart1_dma0_rxdata &rArr; dma_transfer_number_config
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_write_command
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_read_command
</UL>

<P><STRONG><a name="[9e]"></a>usart1_dma0_rxinit</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, usart1_dma0.o(.text.usart1_dma0_rxinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = usart1_dma0_rxinit &rArr; dma_memory_to_memory_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_to_memory_disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_init
</UL>

<P><STRONG><a name="[a0]"></a>usart1_dma0_send</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, usart1_dma0.o(.text.usart1_dma0_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usart1_dma0_send &rArr; dma_memory_address_config
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmit_config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_write_command
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_send_read_command
</UL>

<P><STRONG><a name="[9d]"></a>usart1_dma0_txinit</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, usart1_dma0.o(.text.usart1_dma0_txinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = usart1_dma0_txinit &rArr; dma_memory_to_memory_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_to_memory_disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_init
</UL>

<P><STRONG><a name="[9c]"></a>usart1_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, usart1_dma0.o(.text.usart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usart1_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_init
</UL>

<P><STRONG><a name="[a6]"></a>usart_baudrate_set</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, gd32e50x_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
</UL>

<P><STRONG><a name="[a5]"></a>usart_deinit</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gd32e50x_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
</UL>

<P><STRONG><a name="[a3]"></a>usart_dma_receive_config</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32e50x_usart.o(.text.usart_dma_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_rxinit
</UL>

<P><STRONG><a name="[a4]"></a>usart_dma_transmit_config</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32e50x_usart.o(.text.usart_dma_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_dma0_send
</UL>

<P><STRONG><a name="[a9]"></a>usart_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32e50x_usart.o(.text.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
</UL>

<P><STRONG><a name="[a7]"></a>usart_receive_config</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gd32e50x_usart.o(.text.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
</UL>

<P><STRONG><a name="[a8]"></a>usart_transmit_config</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gd32e50x_usart.o(.text.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_init
</UL>

<P><STRONG><a name="[78]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[65]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[d9]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[da]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[87]"></a>SysTick_Config</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, systick.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[88]"></a>__NVIC_SetPriority</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[a2]"></a>system_clock_180m_hxtal</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, system_gd32e50x.o(.text.system_clock_180m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[89]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32e50x.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_180m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8b]"></a>dma_periph_and_channel_check</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32e50x_dma.o(.text.dma_periph_and_channel_check))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_to_memory_disable
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>

<P><STRONG><a name="[59]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
